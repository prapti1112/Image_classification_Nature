Task 1:
I would use the following steps to build a classification model:
1. Analyse the dataset
     (i) Is data balanced or not? The data set used here is balanced
    (ii) Is data augmentation need? [In this case I have decided to not perform data augmentation]
2. Build the structure of loading data and other utilities [This includes using tensorflow dataset to preprocess and build dataset for training]
3. Building the actual model architecture according to the official paper. Here the architectures used are:
     (i) VGG19
    From all these architectures the one performing the best is choosen for further tuning
4. Apply hyperparameter tuning on the model to get best accuracy


Task 2:
After building the model and determining all the hyperparameters for the current model I would start with a random sweep across different parameters.
Once I have a good set of paramters I would fine-tune the parameters for given data using consecutive sweeps to get the best accuracy possible 
with hyperparamters in the smaller range. Here I tried to use the weights & biases platform to better understand the training process and tune the parameters

Task 3:
In the scenario where the model is not performing well, what steps would you take to conduct a detailed analysis of the failure? How would you go about 
debugging the neural network to identify potential issues?
When the model is not performing as expected I will start by checking which of the modules in the pipeline(data loading, model building, model compilation/loss metrics, 
result interpretation) contribute to the issue. I will go module by module checking each part to identify problem. If the whole pipeline seems fine and the model is still 
not training I would focus on the parameters used(eg. batch_size, epochs, etc.), tweek them and the amount of data used. I would pay attention to the size of the dataset as small 
datasets are not able to trained properly whereas large datasets take a lot of time to train and might contain too much variation for the model to learn.

Task 4:
The current model used is VGG network but other networks such as resnet can be implemented that perform the same with a higher accuracy. Further finetuning of the 
model can also be performed to gain a better accuracy.